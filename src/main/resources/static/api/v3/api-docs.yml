"openapi": "3.0.1"
"info":
  "title": Example API
  version: "@project.version@"
servers:
  - description: Local
    url: "/"
paths:
  /api/v1/transaction/save:
    post:
      tags:
        - transaction
      summary: "DEMO-1-1 save transaction"
      operationId: "DEMO-1-1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SaveTransactionRequest"
        required: true
      responses:
        200:
          description: save transaction
          content:
            application/json:
              schema:
                type: object
                properties: { }
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: invalid input, object invalid
        404:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: not found



  /api/v1/transaction/retrieve:
    post:
      tags:
        - transaction
      summary: "DEMO-1-2 retrieve transaction"
      operationId: "DEMO-1-2"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetrieveTransactionRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveTransactionResponse"
          description: retrieve transaction
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: invalid input, object invalid
        404:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: not found



  /api/v1/transaction/update:
    post:
      tags:
        - transaction
      summary: "DEMO-1-3 update transaction"
      operationId: "DEMO-1-3"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTransactionRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTransactionResponse"
          description: update transaction
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: invalid input, object invalid
        404:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: not found



  /api/v1/orderLine/retrieve:
    post:
      tags:
        - orderLine
      summary: "DEMO-2-1 retrieve orderLine"
      operationId: "DEMO-2-1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetrieveOrderLineRequest"
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveOrderLineResponse"
          description: update transaction
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: invalid input, object invalid
        404:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: not found

  /api/v1/orderLine/retrieveAll:
    get:
      tags:
        - orderLine
      summary: "DEMO-2-2 retrieve all orderLine"
      operationId: "DEMO-2-2"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveOrderLinesResponse"
          description: update transaction
        400:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: invalid input, object invalid
        404:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: not found

components:

  schemas:

    SaveTransactionRequest:
      type: object
      description: SaveTransactionRequest
      required:
        - amount
        - payment_type
        - orders
      properties:
        amount:
          type: number
          format: float
          example: "amount"
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderLines'
          description: orders

    RetrieveTransactionRequest:
      type: object
      description: RetrieveTransactionRequest
      required:
        - transactionId
      properties:
        transactionId:
          type: string
          description: The unique identifier of the transaction to retrieve
          example: "transactionId"



    RetrieveTransactionResponse:
      type: object
      description: RetrieveTransactionResponse
      properties:
        transaction_id:
          type: string
          format: string
          example: "transaction_id"
        amount:
          type: number
          format: float
          example: "amount"
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        status:
          $ref: '#/components/schemas/StatusTypeEnum'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderLines'
          description: orders


    UpdateTransactionRequest:
      type: object
      description: UpdateTransactionRequest
      required:
        - transaction_id
        - amount
        - payment_type
        - status
        - orders
      properties:
        transaction_id:
          type: string
          format: string
          example: "transaction_id"
        amount:
          type: number
          format: float
          example: "amount"
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        status:
          $ref: '#/components/schemas/StatusTypeEnum'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderLines'
          description: orders

    UpdateTransactionResponse:
      type: object
      description: UpdateTransactionResponse
      properties:
        transaction_id:
          type: string
          format: string
          example: "transaction_id"
        amount:
          type: number
          format: float
          example: "amount"
        payment_type:
          $ref: '#/components/schemas/PaymentTypeEnum'
        status:
          $ref: '#/components/schemas/StatusTypeEnum'
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderLines'
          description: orders


    OrderLines:
      type: object
      description: OrderLines
      required:
        - productName
        - productReference
        - quantity
        - price
      properties:
        productName:
          type: string
          format: string
          example: "productName"
        productReference:
          type: string
          format: string
          example: "productReference"
        quantity:
          type: number
          format: float
          example: "quantity"
        price:
          type: number
          format: float
          example: "price"


    StatusTypeEnum:
      type: string
      enum: [ IN_PROGRESS, CAPTURED , AUTHORIZED ]


    PaymentTypeEnum:
      type: string
      enum: [ CREDIT_CARD, PAYPAL , GIFT_CARD ]









    RetrieveOrderLineRequest:
      type: object
      description: RetrieveOrderLineRequest
      required:
        - orderLineId
      properties:
        orderLineId:
          type: string
          description: The unique identifier of the order line to retrieve
          example: "orderLineId"


    RetrieveOrderLineResponse:
      type: object
      description: OrderLines
      required:
        - productName
        - productReference
        - quantity
        - price
      properties:
        productName:
          type: string
          format: string
          example: "productName"
        productReference:
          type: string
          format: string
          example: "productReference"
        quantity:
          type: number
          format: float
          example: "quantity"
        price:
          type: number
          format: float
          example: "price"

    RetrieveOrderLinesResponse:
      required:
        - orderLines
      properties:
        orderLines:
          type: array
          items:
            $ref: '#/components/schemas/RetrieveOrderLineResponse'


    ErrorResponse:
      title: Error
      description: Common errors definition
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"


    Error:
      type: object
      description: Error object
      properties:
        code:
          type: string
          description: Error code
          example: UNHANDLED
        message:
          type: string
          description: Error message
          example: Serious system error, please contact your local authorities